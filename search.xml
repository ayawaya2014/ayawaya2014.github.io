<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Adaptive sliding mode formation control]]></title>
    <url>%2F2019%2F04%2F20%2FAdaptive-sliding-mode-formation-control%2F</url>
    <content type="text"><![CDATA[Adaptive sliding mode formation control for AUVs in water flow environment. Source Code Sliding mode control (dynamics). Water flow (Ocean Current) mathematic model. Model of water flow is established for simulation. Red lines defines the potentials and blue arrows are velocities of the flow field. The first current model is Fc = 1 - tanh\frac{y-B(t)*cos(k*(x-c*t)+\alpha)}{\sqrt{(1+k^2*B^2(t)*sin^2(k*(x-c*t)+\alpha)}}where B(t) = B_0+e*cos(w*t+\theta)according to literature [1], [2]. ​ To be continued… [1] 徐玉如, 姚耀中. 考虑海流影响的水下机器人全局路径规划研究[J]. 中国造船, 2008, 49(4): 109-114. [2] Alvarez A, Caiti A and Onken R. Evolutionary path planning for autonomous underwater vehicles in a variable ocean[J]. IEEE Journal of Oceanic Engineering, Apr. 2004, 29(2): 418-429.]]></content>
      <categories>
        <category>科研</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>AUV</tag>
        <tag>Water Flow</tag>
        <tag>Formation Tracking</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Dubins path planning codes]]></title>
    <url>%2F2019%2F03%2F31%2FDubins-path-planning-codes%2F</url>
    <content type="text"><![CDATA[Dubins path planning codes for robots with initial velocity with or without workloads balancing. Codes is Published on GithubBlog]]></content>
      <categories>
        <category>科研</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Robotics</tag>
        <tag>Dubins</tag>
        <tag>Path Planning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Experiments of two AUVs in the pool]]></title>
    <url>%2F2018%2F07%2F02%2FExperiments-of-two-AUVs-in-the-pool%2F</url>
    <content type="text"><![CDATA[exp_1 exp_2]]></content>
      <categories>
        <category>科研</category>
      </categories>
      <tags>
        <tag>AUV</tag>
        <tag>Robotics</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博士学位论文摘要]]></title>
    <url>%2F2018%2F04%2F11%2F%E5%8D%9A%E5%A3%AB%E5%AD%A6%E4%BD%8D%E8%AE%BA%E6%96%87%E6%91%98%E8%A6%81%2F</url>
    <content type="text"><![CDATA[全文PDF 答辩PPT 部分代码 多AUV水下编队控制方法研究摘 要 本论文主要研究多自治水下机器人（Autonomous Underwater Vehicle，AUV）水下编队控制问题。编队控制（Formation Control）是指人们在控制多个机器人（Robots）或智能体（Agents）前往某个目的地或完成某项工作任务的过程中，使其既遵循一定的队形约束，又适应环境约束(如躲避障碍物或空间的物理限制)的控制方法或技术。海洋工作环境复杂、多变、难以预测，多个AUV要在高度自治、能源有限的条件下高效完成编队作业任务，就需要能够有效避开障碍物，能够应对海流的扰动，因此，其水下编队控制的研究十分关键。本论文以多个AUV组成的系统为研究对象，综合利用改进的自组织映射神经网络（Self-organizing Map，SOM），自组织人工势场（Artificial Potential Field，APF），自适应高阶滑模控制（Sliding Mode Control，SMC）等方法，进行多AUV编队控制，实现了复杂海洋环境下的编队队形变换（Formation Transformation），编队跟踪（Formation Tracking）与编队安全避障。本论文主要进行了以下研究工作。 结合国内外已有文献，对多智能体编队控制方法进行分类总结，对现有的编队控制方法进行分析，找出多AUV水下编队控制的若干主要难点问题。 针对水下环境的特殊性和AUV水下作业任务的需求，设计了一种分层次的控制器结构，以单AUV混合控制体系为基本组成单元，建立一个开放的多AUV控制系统。对于具体任务执行时的协调，采用基于行为的控制方式。通过设计分层次的控制器架构，建设了一种以领航–跟随模式为基础，以改进自组织映射算法和自适应滑模控制器为核心，融合多种编队控制方法的控制系统，从而为处理多AUV水下编队问题提供了一种开放的、分布式的控制器架构。 提出了一种自适应的自组织映射神经网络方法，将其应用于多AUV的水下编队控制，设计了新的邻域函数与负载均衡策略，解决了多AUV系统的运动学编队控制问题。该方法可以有效的处理多AUV编队的轨迹跟踪问题，同时保持整个编队的负载平衡，而不需要过多的编队内部信息交互；它还可以自动实现编队的队形变换与复原；该方法改进了传统的领航–跟随与编队方法，具有自适应与分布式的特性，在编队中的领航AUV出现故障失效时，具有容错能力，能够保持编队的正常运行。与传统的编队控制方法进行比较，该方法具有较明显的优点。 针对障碍物环境下的多AUV编队避障问题，改进了人工势场方法的势场函数和算法流程，将其与自组织映射编队控制策略相结合，实现了一种自组织人工势场方法。当编队遇到复杂障碍物环境时，该方法可以有效的实现编队的整体避障，保证编队的安全运行。通过设计虚拟AUV与局部最小点问题分析，进一步提高了人工势场法的可用性，在二维（Two-Dimensional，2-D）和三维（Three-Dimensional，3-D）环境中进行了仿真实验验证。采用Dubins方法，控制编队内AUV完成运动学约束下的避障路径规划。 在编队路径规划研究的基础上，进一步研究了多AUV系统的动力学控制问题，对欠驱动AUV进行动力学建模，根据其数学模型设计了一种高阶滑模控制器，消除了控制器抖振问题，并证明了其稳定性。对于多AUV水下编队的工作环境复杂性问题，本文针对海流的影响进行探讨，分别处理了定海流与时变海流问题，建立典型的海流数学模型用于仿真实验；在高阶滑模控制器的基础上加入自适应特性，用于处理有界时变海流的扰动。最后，分别在二维和三维环境下进行了仿真实验验证，表明该自适应高阶滑模控制器具有较好的抗干扰能力。 关键词： 自治水下机器人， 编队控制，自组织映射，人工势场，滑模控制， 领航–跟随， 编队跟踪， 队形变换， 动力学， 海流STUDY OF UNDERWATER FORMATION CONTROL METHODS FOR MULTI-AUV SYSTEMSABSTRACTThis thesis mainly studies the underwater formation control problem for multi-AUV (Autonomous Underwater Vehicle) systems. Formation control is a technology to control a group of robots or agents including ground robots, aerial crafts, surface vehicles and AUVs, moving to some destinations or moving along desired paths as the tasks require, at the same time maintaining desired formation patterns, and adapting to the environmental constraints, such as obstacles, limited space, ocean current and communication constraints. AUVs’ working environment in the ocean is complex, volatile and unpredictable. Multi-AUV system with finite energy must be highly autonomous to complete the formation’s tasks very efficiently. They have to to be able to avoid obstacles and deal with the ocean current disturbance. Therefore, the research of the underwater formation control technology is critical.This paper takes the multi-AUV system as the research object, and comprehensively utilizes the improved SOM (Self-organizing Mapping) neural network, self-organized APF (Artificial Potential Field), adaptive higher order SMC (Sliding Mode Control) methods to formation control. At last, formation control of AUVs, including formation transformation, formation tracking and obstacle avoidance of the whole formaiton under complex ocean environments are realized. This thesis mainly conducts the following research details. Based on the existing literature at home and abroad, the multi-agent formation control methods are classified into several categories. The existing formation control approaches are analyzed, and major difficult problems in underwater formaiton control of AUVs are proposed. According to the particularity of underwater environment and the demands of the AUVs’ underwater tasks, we design a hierarchical controller structure. Based on the single AUV hybrid control system as the basic composition unit, an open structure of multi-AUV control system is established. For a specific task execution’s coordination, the control method is based on the behavior of the AUVs. Through the design of controller’s hierarchical architecture, employing the leader-follower patterns as the basic structure, and the improved SOM algorithm with the adaptive SMC as the core, and the fusion of a variety of formation control methods for the control system, an opened, distributed controller is provided to deal with underwater formation control of multi-AUV systems. An adaptive self-organizing mapping neural network method is proposed for the distributed formation control of the multi-AUV system. In the algorithm, new neighborhood function and workload balance strategy are designed to solve the kinematic formation control problem. This method can effectively handle the trajectory tracking problem, while maintaining the entire team’s workload balance, only with limited information of the AUVs in the formation. It can automatically realize the formation transformation and restoration. This method improved the traditional leader-follower formation approach, thus it has the distribution and adaption characteristics. In the case of some AUVs in the formation break down, this controller has fault-tolerance ability, which can maintain the normal operation of the team. Comparing with the traditional formation control, the proposed method has obvious advantages. To solve the obstacle avoidance problem of the multi-AUV formation system, the artificial potential field algorithm and the potential functions are improved. Combined with the self-organizing mapping based formation control strategy, a kind of self-organized artificial potential field method could be implemented. When the formation encounters complex environments with obstacles, this method effectively realizes the whole formation’s avoidance action, which guarantees the safety of the unit. Virtual agent method is designed and the local minima problems are analyzed, which further improves the availability of the proposed method. Simulation demonstrations have been done in 2-D (Two-Dimensional) and 3-D (Three-Dimensional) obstacle environments. Using the Dubins method, AUVs in the formation are controlled to complete obstacle avoidance path planning under kinematic constraints. Based on the research of formation’s path planning, the problem of dynamic formation control for the multi-AUV system is further studied. Dynamic model of the underactuated AUV is established with its mathematical model to design a kind of higher order sliding mode controller, which eliminates the chattering problem of the conventional controller, and the new controller’s stability is approved. For the underwater working environment’s complexity problem, this paper studies the influence of ocean currents, dealing with the constant current and time-varying current respectively. Mathematical models of the typical ocean currents are established for simulation experiment. Adaptive feature is added to the higher order sliding mode controller to deal with bounded time-varying current’s disturbance. Finally, simulation experiments are implemented in the 2-D and 3-D environments, which show that the adaptive higher order sliding mode controller has anti-interference ability. Keywords: AUV, formation control, SOM, APF, SMC, leader-follower, formation tracking, formation transformation, dynamics, ocean current]]></content>
      <categories>
        <category>科研</category>
      </categories>
      <tags>
        <tag>AUV</tag>
        <tag>Robotics</tag>
        <tag>PhD Dissertation</tag>
        <tag>Formation Control</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Simulation for Formation Control Based on Adaptive SOM Method]]></title>
    <url>%2F2018%2F03%2F17%2Fsimulation-1%2F</url>
    <content type="text"><![CDATA[X. Li and D. Zhu, “An Adaptive SOM Neural Network Method to Distributed Formation Control of a Group of AUVs,” in IEEE Transactions on Industrial Electronics, vol. 65, no. 10, pp. 8260-8270. doi: 10.1109/TIE.2018.2807368 simulation]]></content>
      <categories>
        <category>科研</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>AUV</tag>
        <tag>Robotics</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Multi-Agent-Task-Assignment-based-on-SOM-Method-Code-Published]]></title>
    <url>%2F2018%2F03%2F06%2FMulti-Agent-Task-Assignment-based-on-SOM-Method-Code-Published%2F</url>
    <content type="text"><![CDATA[Code of Multi-Agent Task-Assignment based on SOM Neural Network Method is Published on Github Authors: Xin Li, Daqi Zhu Email: lixin850224@163.com; zdq367@aliyun.com Laboratory of Underwater Vehicles and Intelligent Systems Shanghai Maritime University]]></content>
      <categories>
        <category>科研</category>
      </categories>
      <tags>
        <tag>Robotics</tag>
        <tag>Multi-agent</tag>
        <tag>AUVs</tag>
        <tag>Task Assignment</tag>
        <tag>SOM Neural Networks</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Path Planning based on Artificial Potential Field Method Code Published]]></title>
    <url>%2F2018%2F03%2F05%2FPath-Planning-based-on-Artificial-Potential-Field-Method-Code-Published%2F</url>
    <content type="text"><![CDATA[Code of Path Planning based on Artificial Potential Field Method is Published on Github MATLAB Code of Artificial Potencial Field Method for Robot Path Planning Authors: Xin Li, Daqi Zhu Email: lixin850224@163.com; zdq367@aliyun.com Laboratory of Underwater Vehicles and Intelligent Systems Shanghai Maritime University]]></content>
      <categories>
        <category>科研</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>AUV</tag>
        <tag>Robotics</tag>
        <tag>Path Planning</tag>
        <tag>APF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[移动机器人D*Lite路径规划算法设计、仿真及源码]]></title>
    <url>%2F2018%2F03%2F01%2F%E7%A7%BB%E5%8A%A8%E6%9C%BA%E5%99%A8%E4%BA%BAD-Lite%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E3%80%81%E4%BB%BF%E7%9C%9F%E5%8F%8A%E6%BA%90%E7%A0%81%2F</url>
    <content type="text"><![CDATA[原文地址 Dstar Lite路径规划算法简介D*Lite算法是Koenig S和Likhachev M基于LPA*算法基础上提出的路径规划算法。 LPA*算法本是基于Dijkstra最短路径算法而产生的定起点、定目标点的路径规划算法。 通过对LPA*算法的改造，使LPA*算法的思想能应用到诸如车辆动态导航这样的问题。 LPA*算法区别于其他算法 的一个重要特点是rhs()的定义： rhs(s) = \left\lbrace \begin{array}{ll} 0 & \text{if} \; s = s_{start} \\\\ \text{min}_{s^{'} \in Pred(s)}(g(s^{'})+c(s^{'},s)) & \text{otherwise} \end{array} \right.D*Lite算法继承了rhs()的概念，但D*Lite算法是从目标节点向起始节点搜索。 为了让节点v的启发函数值随着起点位置变化而变化， Koenig S和Likhachev M给出了两种方法：一是，根据新的起点位置，将优先队列中所有节点的启发函数值重新计算；二是，并不重新计算队列中的启发函数值，而是在计算新添加到优先队列中的节点的启发函数值时，加上一个修饰符 ,表示机器人移动距离的叠加。 D* Lite Pseudo Code: CaculateKey(s) return [min(g(s),rhs(s))+h(s_start_ , s)+km; min(g(s),rhs(s))]; Initialize() U: =0;km =0;for all s $\in$ S, rhs(s) = g(s) = $\infty$;rhs(sgoal) = 0;U.Insert(sgoal), CaculateKey(sgoal)); UpdateVertex$(\mu)$ if $(\mu \neq s_{goal})$, _rhs_$(\mu)$ = $\text{min}_{s^{‘} \in Succ(\mu)}(c(\mu,s^{‘})+g(s^{‘}))$;if $(\mu \in U)$, U.Remove$(\mu)$if $(g(\mu) \neq rhs(\mu))$, U.Insert$(\mu, CaculateKey(\mu))$; ComputeShortestPath()while (U.TopKey() &lt; CaculateKey($S_{start}$) or $rhs(s_{start}) \neq g(s_{start})$) $k_{old} $ = U.TopKey();$\mu$ = U.Pop();if ($k_{old}$ &lt; CaculateKey($\mu$)) U.Insert($\mu$, CaculateKey($\mu$)); elseif ($g(\mu) &gt; rhs(\mu)$) $g(\mu) = rhs(\mu)$for all $s \in Pred(\mu)$, UpdateVertex(s); else $g(\mu) = \infty$;for all $s \in Pred(\mu) \cup {\mu}$, UpdateVertex(s); Main() $ S_{last} = S_{start} $;Initialize();ComputeShortestPath();while($ S_{start} \neq S_{goal} $) / if ($ g(S_{start} =\infty) $) then there is no known path /$ S_{start} = arg \text{min}_{s^{‘} \in Succ(\mu)}(c(\mu,s^{‘})+g(s^{‘})) $; Move to $ S_{start} $; Scan graph for changed edge costs; if any edge costs changed $k_m = k_m + h(s_{last}, s_{start})$; $ S_{last} = S_{start} $; for all directed edges $(u, v)$ with changed edge costs Update the edge cost $c(u, v)$; Update Vertex$(u)$; Compute ShortestPath(); 更详细的算法说明，请查阅有关文献资料。 Linux系统简要说明Linux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。在做算法程序开发之前，应对Linux系统基本操作有一定的了解，才能方便上手，在这里向同学们推荐一款教程： 鳥哥的 Linux 私房菜 该教程内容详实全面，是Linux入门的好材料。这里用到一些Linux下的基本操作，客户端可以选择PUTTY，至少掌握： lscdtarmangccmakevimnano 命令不能一一列举。 Dstar Lite程序使用说明该程序调用一些GNU库，请在类Unix系统下编译使用。如果系统没有安装编译工具，则需要先安装 (Ubuntu)：1$ sudo apt-get install build-essential 下载源程序：Dstar.rardstar.tar.gz（若不能下载刷新一下页面） CSDN下载：Dstar.rardstar.tar.gz 下载后解压，进入解压后的目录：12$ cd dstar$ ls 然后使用make编译1$ make 完毕，运行程序:1$ ./dstar 仿真程序操作命令： [q/Q] - 退出 [r/R] - 再次规划路径 [a/A] - 切换自动规划 [c/C] - 清屏（重启） 鼠标左键 - 设置障碍物 鼠标中间 - 移动目标点 鼠标右键 - 移动起始点 程序提供的Dstar类可以单独调用，使用vim编辑器编写程序：1$ vim DstarDraw.cpp 输入以下内容：1234567891011121314151617#include "Dstar.h"int main() &#123; Dstar *dstar = new Dstar(); list&lt;state&gt; mypath; dstar-&gt;init(0,0,10,5); // set start to (0,0) and goal to (10,5) dstar-&gt;updateCell(3,4,-1); // set cell (3,4) to be non traversable dstar-&gt;updateCell(2,2,42.432); // set set (2,2) to have cost 42.432 dstar-&gt;replan(); // plan a path mypath = dstar-&gt;getPath(); // retrieve path dstar-&gt;updateStart(10,2); // move start to (10,2) dstar-&gt;replan(); // plan a path mypath = dstar-&gt;getPath(); // retrieve path dstar-&gt;updateGoal(0,1); // move goal to (0,1) dstar-&gt;replan(); // plan a path mypath = dstar-&gt;getPath(); // retrieve path return 0;&#125; 该算法还有多种改进分支，在此基础上进一步研究。]]></content>
      <categories>
        <category>科研</category>
      </categories>
      <tags>
        <tag>Robotics</tag>
        <tag>Github</tag>
        <tag>CSDN</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F01%2F01%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>关于本站</category>
      </categories>
      <tags>
        <tag>About</tag>
      </tags>
  </entry>
</search>
